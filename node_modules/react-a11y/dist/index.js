"use strict";

var React = require("react");
var assertions = require("./assertions");

var assertAccessibility = function (tagName, props, children, log) {
  var key;

  var tagTests = assertions.tags[tagName];
  if (tagTests) for (key in tagTests) log(tagTests[key].test(tagName, props, children), tagTests[key].msg);

  var propTests;
  for (var propName in props) {
    propTests = assertions.props[propName];
    if (propTests) for (key in propTests) log(propTests[key].test(tagName, props, children), propTests[key].msg);
  }
};

var error = function (passed, msg) {
  if (!passed) throw new Error(msg);
};

var warn = function (passed, msg) {
  if (!passed) console.warn(msg);
};

module.exports = function (options) {
  var _createElement = React.createElement;
  var log = options && options["throw"] ? error : warn;
  React.createElement = function (type, _props) {
    for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      children[_key - 2] = arguments[_key];
    }

    if (typeof type === "string") {
      var props = _props || {};
      assertAccessibility(type, props, children, log);
    }
    return _createElement.apply(this, arguments);
  };
};