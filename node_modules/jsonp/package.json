{
  "name": "jsonp",
  "description": "A sane JSONP implementation.",
  "version": "0.1.0",
  "dependencies": {
    "debug": "*"
  },
  "component": {
    "scripts": {
      "jsonp": "jsonp.js"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/LearnBoost/jsonp.git"
  },
  "readme": "\n# jsonp\n\nA simple JSONP implementation.\n\n## Installation\n\nInstall for node.js or browserify using `npm`:\n\n``` bash\n$ npm install jsonp\n```\n\nInstall for component(1) using `component`:\n\n``` bash\n$ component install LearnBoost/jsonp\n```\n\n## API\n\n### jsonp(url, opts, fn)\n\n- `url` (`String`) url to fetch\n- `opts` (`Object`), optional\n  - `param` (`String`) name of the query string parameter to specify\n    the callback (defaults to `callback`)\n  - `timeout` (`Number`) how long after a timeout error is emitted. `0` to\n    disable (defaults to `60000`)\n  - `prefix` (`String`) prefix for the global callback functions that\n    handle jsonp responses (defaults to `__jp`)\n- `fn` callback\n\nThe callback is called with `err, data` parameters.\n\nIf it times out, the `err` will be an `Error` object whose `message` is\n`Timeout`.\n\nReturns a function that, when called, will cancel the in-progress jsonp request\n(`fn` won't be called).\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/LearnBoost/jsonp/issues"
  },
  "_id": "jsonp@0.1.0",
  "dist": {
    "shasum": "63958ad98f8d9e2a347e53bb6ae38b9a27523136"
  },
  "_from": "jsonp@0.1.0",
  "_resolved": "https://registry.npmjs.org/jsonp/-/jsonp-0.1.0.tgz"
}
